diff --git a/src/services/rating.service.js b/src/services/rating.service.js
index 06a3610..9b38947 100644
--- a/src/services/rating.service.js
+++ b/src/services/rating.service.js
@@ -2,6 +2,7 @@ import { goodfellas } from '../../test/fixtures/movies.js'
 import { ratings } from '../../test/fixtures/ratings.js'
 import NotFoundError from '../errors/not-found.error.js'
 import { toNativeTypes } from '../utils.js'
+import { int } from 'neo4j-driver'
 
 // TODO: Import the `int` function from neo4j-driver
 
@@ -59,11 +60,54 @@ export default class ReviewService {
    */
   // tag::add[]
   async add(userId, movieId, rating) {
-    // TODO: Convert the native integer into a Neo4j Integer
-    // TODO: Save the rating in the database
-    // TODO: Return movie details and a rating
+    // tag::convert[]
+    // Convert the native integer into a Neo4j Integer
+    rating = int(rating)
+    // end::convert[]
 
-    return goodfellas
+    // tag::write[]
+    // Save the rating to the database
+
+    // Open a new session
+    const session = this.driver.session()
+
+    // Save the rating in the database
+    const res = await session.executeWrite(
+      tx => tx.run(
+        `
+          MATCH (u:User {userId: $userId})
+          MATCH (m:Movie {tmdbId: $movieId})
+          MERGE (u)-[r:RATED]->(m)
+          SET r.rating = $rating,
+              r.timestamp = timestamp()
+          RETURN m {
+            .*,
+            rating: r.rating
+          } AS movie
+        `,
+        { userId, movieId, rating, }
+      )
+    )
+
+    await session.close()
+    // end::write[]
+
+    // tag::throw[]
+    // Check User and Movie exist
+    if ( res.records.length === 0 ) {
+      throw new NotFoundError(
+        `Could not create rating for Movie ${movieId} by User ${userId}`
+      )
+    }
+    // end::throw[]
+
+    // tag::addreturn[]
+    // Return movie details and rating
+    const [ first ] = res.records
+    const movie = first.get('movie')
+
+    return toNativeTypes(movie)
+    // end::addreturn[]
   }
   // end::add[]
 
